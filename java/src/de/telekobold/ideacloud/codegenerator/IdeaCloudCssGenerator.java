package de.telekobold.ideacloud.codegenerator;

import java.io.IOException;

/**
 * 
 * The generated cloud tag CSS code is derived from the <a href=
 * "https://dev.to/alvaromontoro/create-a-tag-cloud-with-html-and-css-1e90">cloud
 * tag generation tutorial</a> from Alvaro Montoro.
 * </p>
 * 
 * @author Michael Merz <mail@telekobold.de>
 */
public class IdeaCloudCssGenerator extends IdeaCloudAbstractGenerator {

    private final CssBuilder ideaCloud_css;

    public IdeaCloudCssGenerator() {
	ideaCloud_css = new CssBuilder();
    }

    public void generateIdeaCloudCssFile() throws IOException {
	ideaCloud_css.comment("This file was generated by IdeaCloudCssGenerator.java")
		.nl()
		.add("* {");
	/*
	 * When a method implemented in AbstractBuilder is called, an object of type
	 * AbstractBuilder is returned => a compile error occurs if in the method chain,
	 * a method is called that is implemented in a sub class of AbstractBuilder but
	 * not as abstract or concrete method in AbstractBuilder (e.g. addPropValPair()
	 * from CssBuilder). Only current fix for that: interrupt the method chain.
	 */
	ideaCloud_css.addPropValPair("background-color", "black")
		.add("background-color: black;")
		.add("}")
		.nl();
	ideaCloud_css.add("ul.cloud {")
		.add("list-style: none;")
		.add("padding-left: 0;")
		.add("display: flex;")
		.add("flex-wrap: wrap;")
		.add("align-items: center;")
		.add("justify-content: center;")
		.add("line-height: 2.5rem")
		.add("}")
		.nl()
		.nl();
	ideaCloud_css.comment(
		"Rules for defining the font size of an <a> tag depending on the value of its data-weight attribute:")
		.addUlCloudRules(1, 15)
		.nl();

	generateOutputFile("ideaCloud.css", ideaCloud_css);
    }

}
